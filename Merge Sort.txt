void merge(int a[], int l, int mid, int h)    
{    
    int i, j, k;  
    int n1 = mid - l + 1;    
    int n2 = h - mid;    
      
    int larr[n1], rarr[n2]; 
        
    for (int i = 0; i < n1; i++)    
    	larr[i] = a[l + i];    
    for (int j = 0; j < n2; j++)    
    	rarr[j] = a[mid + 1 + j];    
      
    i = 0;  
    j = 0;    
    k = l;    
      
    while (i < n1 && j < n2)    
    {    
        if(larr[i] <= rarr[j])    
        {    
            a[k] = larr[i];    
            i++;    
        }    
        else    
        {    
            a[k] = rarr[j];    
            j++;    
        }    
        k++;    
    }    
    while (i<n1)    
    {    
        a[k] = larr[i];    
        i++;    
        k++;    
    }    
      
    while (j<n2)    
    {    
        a[k] = rarr[j];    
        j++;    
        k++;    
    }    
}    
  
void mergeSort(int a[], int l, int h)  
{  
    if (l < h)   
    {  
        int mid = (l + h) / 2;  
        mergeSort(a, l, mid);  
        mergeSort(a, mid + 1, h);  
        merge(a, l, mid, h);  
    }  
}